name: Semantic Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install poetry --upgrade pip
          poetry config virtualenvs.create false
          poetry install

      - name: Python Semantic Release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
          c_ver=$(semantic-release print-version --current) #Check current version
          n_ver=$(semantic-release print-version) #Check for new version
          [[ "$c_ver" != "$n_ver" ]] #Compare versions
          should_skip=$(echo $?) #Get exit status
          echo "should_skip=$should_skip" >> $GITHUB_ENV
        env:
          should_skip: $(echo $should_skip)
      - name: Updated blender __init__
        if: ${{ env.should_skip == 0 }}
        run: |
            #Get new version
            old_ver=$(semantic-release print-version --current)
            #Get new version
            new_ver=$(semantic-release print-version)
            # constuct blender string version format.
            blinfo_old=$(echo $old_ver | tail -1 | awk -F. '{print $1", "$2", "$3}')
            blinfo=$(echo $new_ver | tail -1 | awk -F. '{print $1", "$2", "$3}')
            echo $blinfo_old "-->" $blinfo
            # Replace version
            awk -v old_version="$blinfo_old" -v new_version="$blinfo" '{sub('old_version','new_version')}1' ./blendernc/__init__.py > ./blendernc/__init__.py_tmp
            # Rename temporal file
            mv ./blendernc/__init__.py_tmp ./blendernc/__init__.py
            git status
            git commit -am 'ci: update blendernc bl_info version'
      - name: Release new version
        if: ${{ env.should_skip == 0 }}
        run: |
          semantic-release publish -D commit_author="github-actions <action@github.com>"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}